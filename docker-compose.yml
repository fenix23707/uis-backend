version: "3.9"
services:
  security-server:
    container_name: security-server
    image: fenix23707/security-server:dev
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-uis:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8081:8080"
    restart: on-failure
    depends_on:
      postgres-uis:
        condition: service_healthy

  academic-server:
    container_name: academic-server
    image: fenix23707/academic-server:latest
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-uis:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SECURITY_SERVER_URL=http://security-server:8080
    ports:
      - "8082:8080"
    restart: on-failure
    depends_on:
      postgres-uis:
        condition: service_healthy

  gateway-server:
    container_name: gateway-server
    image: fenix23707/gateway-server:latest
    environment:
      - SPECIALIZATION_SERVER_URL=http://academic-server:8080
      - SECURITY_SERVER_URL=http://security-server:8080
    ports:
      - "8080:8080"
    depends_on: [academic-server, security-server]

  postgres-uis:
    container_name: postgres-uis
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./postgres-uis:/data/postgres
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/2-data.sql
    expose:
      - "5432"
    ports:
      - "5431:5432"
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10

# TODO: Try flyway https://porter.codes/2021/04/28/Docker-Compose-conditions.html
